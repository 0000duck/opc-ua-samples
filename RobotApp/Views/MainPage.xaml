<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:conv="using:Template10.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:RobotApp.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:RobotApp.ViewModels"
      xmlns:csControls="using:Workstation.UI.Xaml.Controls"
      xmlns:csData="using:Workstation.UI.Xaml.Data"
      x:Class="RobotApp.Views.MainPage"
      mc:Ignorable="d"
      d:DataContext="{d:DesignInstance vm:MainPageViewModel}">

    <Page.Resources>
        <local:IsModeHandConverter x:Key="IsModeHandConverter" />
        <conv:StringFormatConverter x:Key="StringFormatConverter" />
        <csData:ChangeTypeConverter x:Key="TypeConverter" />
        <csData:UtcToLocalStringConverter x:Key="UtcToLocalStringConverter" />
        <local:AlarmConditionToStringConverter x:Key="AlarmConditionToStringConverter" />
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="UrhoSurface.Visibility"
                                Value="Collapsed" />
                        <Setter Target="controlPanel.(RelativePanel.AlignRightWithPanel)"
                                Value="False" />
                        <Setter Target="controlPanel.(RelativePanel.AlignHorizontalCenterWithPanel)"
                                Value="True" />

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Frame="{x:Bind Frame}"
                             Content="Main Page">
        </controls:PageHeader>

        <ScrollViewer RelativePanel.Below="pageHeader"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.AlignBottomWithPanel="True"
                      HorizontalScrollMode="Disabled">
            <RelativePanel>
                <Grid x:Name="controlPanel"
                      Width="300"
                      RelativePanel.AlignTopWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.AlignBottomWithPanel="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="96" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"
                               Grid.ColumnSpan="2"
                               FontSize="26.667"
                               Text="Robot 1" />
                    <TextBlock Grid.Row="2"
                               Grid.Column="0"
                               Text="Mode" />
                    <ComboBox Grid.Row="2"
                              Grid.Column="1"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              SelectedIndex="{x:Bind ViewModel.Robot1Mode, Mode=TwoWay, Converter={StaticResource TypeConverter}}">
                        <ComboBoxItem Content="Off" />
                        <ComboBoxItem Content="Hand" />
                        <ComboBoxItem Content="Auto" />
                    </ComboBox>
                    <Grid Grid.Row="3"
                          Grid.ColumnSpan="3">
                        <!--  controls within this grid are enabled only if Robot1Mode is Hand  -->

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="96" />
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Text="Axis 1, &#0176;" />
                        <Slider Grid.Row="0"
                                Grid.Column="1"
                                Margin="0,2"
                                Maximum="180"
                                Minimum="-180"
                                TickFrequency="30"
                                TickPlacement="TopLeft"
                                IsEnabled="{x:Bind ViewModel.Robot1Mode, Converter={StaticResource IsModeHandConverter}, Mode=OneWay}"
                                Value="{x:Bind ViewModel.Robot1Axis1, Mode=TwoWay, Converter={StaticResource TypeConverter}}" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Text="Axis 2, &#0176;" />
                        <Slider Grid.Row="1"
                                Grid.Column="1"
                                Margin="0,2"
                                LargeChange="5"
                                Maximum="45"
                                Minimum="-45"
                                TickFrequency="15"
                                TickPlacement="TopLeft"
                                IsEnabled="{x:Bind ViewModel.Robot1Mode, Converter={StaticResource IsModeHandConverter}, Mode=OneWay}"
                                Value="{x:Bind ViewModel.Robot1Axis2, Converter={StaticResource TypeConverter}, Mode=TwoWay}" />
                        <TextBlock Grid.Row="2"
                                   Grid.Column="0"
                                   Text="Axis 3, &#0176;" />
                        <Slider Grid.Row="2"
                                Grid.Column="1"
                                Margin="0,2"
                                Maximum="45"
                                Minimum="-45"
                                TickFrequency="15"
                                TickPlacement="TopLeft"
                                IsEnabled="{x:Bind ViewModel.Robot1Mode, Converter={StaticResource IsModeHandConverter}, Mode=OneWay}"
                                Value="{x:Bind ViewModel.Robot1Axis3, Mode=TwoWay, Converter={StaticResource TypeConverter}}" />
                        <TextBlock Grid.Row="3"
                                   Grid.Column="0"
                                   Text="Axis 4, &#0176;" />
                        <Slider Grid.Row="3"
                                Grid.Column="1"
                                Margin="0,2"
                                LargeChange="10"
                                Maximum="180"
                                Minimum="-180"
                                SmallChange="5"
                                TickFrequency="30"
                                TickPlacement="TopLeft"
                                IsEnabled="{x:Bind ViewModel.Robot1Mode, Converter={StaticResource IsModeHandConverter}, Mode=OneWay}"
                                Value="{x:Bind ViewModel.Robot1Axis4, Mode=TwoWay, Converter={StaticResource TypeConverter}}" />
                    </Grid>
                    <TextBlock Grid.Row="4"
                               Grid.Column="0"
                               Text="Laser" />
                    <ToggleSwitch x:Name="SwitchLaser"
                                  Grid.Row="4"
                                  Grid.Column="1"
                                  Margin="0,2"
                                  IsOn="{x:Bind ViewModel.Robot1Laser, Mode=TwoWay}"
                                  OnContent="On"
                                  OffContent="Off" />
                    <TextBlock Grid.Row="5"
                               Grid.Column="0"
                               Text="Speed" />
                    <ComboBox Grid.Row="5"
                              Grid.Column="1"
                              SelectedIndex="{x:Bind ViewModel.Robot1Speed, Mode=TwoWay, Converter={StaticResource TypeConverter}}"
                              HorizontalAlignment="Stretch">
                        <ComboBoxItem Content="Slow" />
                        <ComboBoxItem Content="Medium" />
                        <ComboBoxItem Content="Fast" />
                        <ComboBoxItem Content="Turbo" />
                    </ComboBox>
                    <TextBlock Grid.Row="6"
                               Grid.Column="0"
                               Text="Command" />
                    <StackPanel Grid.Row="6"
                                Grid.Column="1"
                                Orientation="Horizontal">
                        <Button x:Name="StopButton"
                                Click="{x:Bind ViewModel.Robot1ModeOff}"
                                Content="Stop" />
                        <Button x:Name="StartButton"
                                Click="{x:Bind ViewModel.Robot1ModeAuto}"
                                Content="Start" />
                    </StackPanel>
                    <Grid Grid.Row="10"
                          Grid.Column="0"
                          Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Text="Axis 1, &#0176;"
                                   HorizontalAlignment="Left"
                                   FontWeight="Bold" />
                        <TextBlock HorizontalAlignment="Right"
                                   Text="{Binding MaxValue, ElementName=Trend1, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:F1\}}" />
                        <csControls:Trendline x:Name="Trend1"
                                              Grid.Row="1"
                                              Height="100"
                                              ItemsSource="{x:Bind ViewModel.Robot1Axis1Queue}" />
                        <TextBlock Grid.Row="2"
                                   Text="{Binding TimeSpan.TotalSeconds, ElementName=Trend1, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:F0\} s}"
                                   HorizontalAlignment="Left" />
                        <TextBlock Grid.Row="2"
                                   HorizontalAlignment="Right"
                                   Text="{Binding MinValue, ElementName=Trend1, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:F1\}}" />
                    </Grid>
                    <TextBlock Grid.Row="11"
                               Grid.Column="0"
                               Text="Input A" />
                    <TextBox x:Name="InputA"
                             Grid.Row="11"
                             Grid.Column="1"
                             Margin="0,2"
                             Text="{x:Bind ViewModel.InputA, Mode=TwoWay}" />
                    <TextBlock Grid.Row="12"
                               Grid.Column="0"
                               Text="Input B" />
                    <TextBox x:Name="InputB"
                             Grid.Row="12"
                             Grid.Column="1"
                             Margin="0,2"
                             Text="{x:Bind ViewModel.InputB, Mode=TwoWay}" />
                    <TextBlock Grid.Row="13"
                               Grid.Column="0"
                               Text="Method" />
                    <StackPanel Grid.Row="13"
                                Grid.Column="1"
                                Orientation="Horizontal">
                        <Button x:Name="MultiplyButton"
                                Click="{x:Bind ViewModel.Robot1Multiply}"
                                Content="Multiply" />
                        <Button x:Name="ClearButton"
                                Click="{x:Bind ViewModel.Clear}"
                                Content="Clear" />
                    </StackPanel>
                    <TextBlock Grid.Row="14"
                               Grid.Column="0"
                               Text="Result" />
                    <TextBox x:Name="Result"
                             Grid.Row="14"
                             Grid.Column="1"
                             Margin="0,2"
                             Text="{x:Bind ViewModel.Result, Mode=TwoWay}" />

                </Grid>
                <local:RobotControl x:Name="robotControl"
                                    RelativePanel.AlignTopWithPanel="True"
                                    RelativePanel.AlignLeftWithPanel="True"
                                    RelativePanel.AlignBottomWithPanel="True"
                                    RelativePanel.LeftOf="controlPanel"
                                    Axis1="{Binding Robot1Axis1}"
                                    Axis2="{Binding Robot1Axis2}"
                                    Axis3="{Binding Robot1Axis3}"
                                    Axis4="{Binding Robot1Axis4}"/>

            </RelativePanel>
        </ScrollViewer>
        <ItemsControl x:Name="Events"
                      RelativePanel.Below="pageHeader"
                      RelativePanel.AlignLeftWithPanel="True"
                      Margin="22,12"
                      Height="400"
                      Width="400"
                      Opacity="0.875"
                      ItemsSource="{x:Bind ViewModel.Robot1Events, Mode=OneWay}">
            <ItemsControl.ItemContainerTransitions>
                <TransitionCollection>
                    <AddDeleteThemeTransition />
                </TransitionCollection>
            </ItemsControl.ItemContainerTransitions>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Background="{StaticResource CustomColorBrush}"
                            Padding="5">
                        <TextBlock Foreground="{StaticResource ContrastColorBrush}"
                                   Text="{Binding Mode=OneWay, Converter={StaticResource AlarmConditionToStringConverter}}" />
                    </Border>

                </DataTemplate>
            </ItemsControl.ItemTemplate>

        </ItemsControl>
    </RelativePanel>
</Page>

